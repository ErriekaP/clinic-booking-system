import { withBreakpoints } from '../breakpoints';
// prettier-ignore
const marginValues = ['auto', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-1', '-2', '-3', '-4', '-5', '-6', '-7', '-8', '-9'];
const marginPropDefs = {
    m: { type: 'enum', values: marginValues, default: undefined, responsive: true },
    mx: { type: 'enum', values: marginValues, default: undefined, responsive: true },
    my: { type: 'enum', values: marginValues, default: undefined, responsive: true },
    mt: { type: 'enum', values: marginValues, default: undefined, responsive: true },
    mr: { type: 'enum', values: marginValues, default: undefined, responsive: true },
    mb: { type: 'enum', values: marginValues, default: undefined, responsive: true },
    ml: { type: 'enum', values: marginValues, default: undefined, responsive: true },
};
function extractMarginProps(props) {
    const { m = marginPropDefs.m.default, mx = marginPropDefs.mx.default, my = marginPropDefs.my.default, mt = marginPropDefs.mt.default, mr = marginPropDefs.mr.default, mb = marginPropDefs.mb.default, ml = marginPropDefs.ml.default, ...rest } = props;
    return { m, mx, my, mt, mr, mb, ml, rest };
}
function withMarginProps(props) {
    return [
        withBreakpoints(props.m, 'rt-r-m'),
        withBreakpoints(props.mx, 'rt-r-mx'),
        withBreakpoints(props.my, 'rt-r-my'),
        withBreakpoints(props.mt, 'rt-r-mt'),
        withBreakpoints(props.mr, 'rt-r-mr'),
        withBreakpoints(props.mb, 'rt-r-mb'),
        withBreakpoints(props.ml, 'rt-r-ml'),
    ]
        .filter(Boolean)
        .join(' ');
}
export { marginPropDefs, extractMarginProps, withMarginProps };
//# sourceMappingURL=margin.props.js.map