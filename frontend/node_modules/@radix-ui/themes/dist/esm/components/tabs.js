'use client';
import * as React from 'react';
import classNames from 'classnames';
import * as TabsPrimitive from '@radix-ui/react-tabs';
import { tabsListPropDefs } from './tabs.props';
import { extractMarginProps, withMarginProps, withBreakpoints } from '../helpers';
const TabsRoot = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = extractMarginProps(props);
    const { className, ...rootProps } = marginRest;
    return (React.createElement(TabsPrimitive.Root, { ...rootProps, ref: forwardedRef, className: classNames('rt-TabsRoot', className, withMarginProps(marginProps)) }));
});
TabsRoot.displayName = 'TabsRoot';
const TabsList = React.forwardRef((props, forwardedRef) => {
    const { className, size = tabsListPropDefs.size.default, ...listProps } = props;
    return (React.createElement(TabsPrimitive.List, { ...listProps, ref: forwardedRef, className: classNames('rt-TabsList', className, withBreakpoints(size, 'rt-r-size')) }));
});
TabsList.displayName = 'TabsList';
const TabsTrigger = React.forwardRef((props, forwardedRef) => {
    const { className, children, ...triggerProps } = props;
    return (React.createElement(TabsPrimitive.Trigger, { ...triggerProps, ref: forwardedRef, className: classNames('rt-reset', 'rt-TabsTrigger', className) },
        React.createElement("span", { className: "rt-TabsTriggerInner" }, children),
        React.createElement("span", { className: "rt-TabsTriggerInnerHidden" }, children)));
});
TabsTrigger.displayName = 'TabsTrigger';
const TabsContent = React.forwardRef((props, forwardedRef) => (React.createElement(TabsPrimitive.Content, { ...props, ref: forwardedRef, className: classNames('rt-TabsContent', props.className) })));
TabsContent.displayName = 'TabsContent';
const Tabs = Object.assign({}, {
    Root: TabsRoot,
    List: TabsList,
    Trigger: TabsTrigger,
    Content: TabsContent,
});
export { Tabs, TabsRoot, TabsList, TabsTrigger, TabsContent };
//# sourceMappingURL=tabs.js.map