import * as React from 'react';
import classNames from 'classnames';
import { Slot } from '@radix-ui/react-slot';
import { textPropDefs } from './text.props';
import { extractMarginProps, withMarginProps, withBreakpoints } from '../helpers';
const Text = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = extractMarginProps(props);
    const { children, className, asChild = false, as: Tag = 'span', size = textPropDefs.size.default, weight = textPropDefs.weight.default, align = textPropDefs.align.default, trim = textPropDefs.trim.default, color = textPropDefs.color.default, highContrast = textPropDefs.highContrast.default, ...textProps } = marginRest;
    return (React.createElement(Slot, { "data-accent-color": color, ...textProps, ref: forwardedRef, className: classNames('rt-Text', className, withBreakpoints(size, 'rt-r-size'), withBreakpoints(weight, 'rt-r-weight'), withBreakpoints(align, 'rt-r-ta'), withBreakpoints(trim, 'rt-r-lt'), { 'rt-high-contrast': highContrast }, withMarginProps(marginProps)) }, asChild ? children : React.createElement(Tag, null, children)));
});
Text.displayName = 'Text';
export { Text };
//# sourceMappingURL=text.js.map