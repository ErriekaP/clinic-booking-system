import * as React from 'react';
import classNames from 'classnames';
import { Slot } from '@radix-ui/react-slot';
import { cardPropDefs } from './card.props';
import { extractMarginProps, withMarginProps, withBreakpoints } from '../helpers';
const Card = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = extractMarginProps(props);
    const { asChild, children, className, size = cardPropDefs.size.default, variant = cardPropDefs.variant.default, ...cardProps } = marginRest;
    const Comp = asChild ? Slot : 'div';
    function getChild() {
        const firstChild = React.Children.only(children);
        return React.cloneElement(firstChild, {
            children: React.createElement("div", { className: "rt-CardInner" }, firstChild.props.children),
        });
    }
    return (React.createElement(Comp, { ref: forwardedRef, ...cardProps, className: classNames('rt-reset', 'rt-Card', className, withBreakpoints(size, 'rt-r-size'), `rt-variant-${variant}`, withMarginProps(marginProps)) }, asChild ? getChild() : React.createElement("div", { className: "rt-CardInner" }, children)));
});
Card.displayName = 'Card';
export { Card };
//# sourceMappingURL=card.js.map