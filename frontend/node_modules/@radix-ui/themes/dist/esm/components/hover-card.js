'use client';
import * as React from 'react';
import classNames from 'classnames';
import * as HoverCardPrimitive from '@radix-ui/react-hover-card';
import { hoverCardContentPropDefs } from './hover-card.props';
import { withBreakpoints } from '../helpers';
import { Theme } from '../theme';
const HoverCardRoot = (props) => (React.createElement(HoverCardPrimitive.Root, { closeDelay: 150, openDelay: 200, ...props }));
HoverCardRoot.displayName = 'HoverCardRoot';
const HoverCardTrigger = React.forwardRef((props, forwardedRef) => (React.createElement(HoverCardPrimitive.Trigger, { ref: forwardedRef, className: classNames('rt-HoverCardTrigger', props.className), ...props, asChild: true })));
HoverCardTrigger.displayName = 'HoverCardTrigger';
const HoverCardContent = React.forwardRef((props, forwardedRef) => {
    const { className, forceMount, container, size = hoverCardContentPropDefs.size.default, ...contentProps } = props;
    return (React.createElement(HoverCardPrimitive.Portal, { container: container, forceMount: forceMount },
        React.createElement(Theme, { asChild: true },
            React.createElement(HoverCardPrimitive.Content, { align: "start", sideOffset: 8, collisionPadding: 10, ...contentProps, ref: forwardedRef, className: classNames('rt-PopperContent', 'rt-HoverCardContent', className, withBreakpoints(size, 'rt-r-size')) }))));
});
HoverCardContent.displayName = 'HoverCardContent';
const HoverCard = Object.assign({}, {
    Root: HoverCardRoot,
    Trigger: HoverCardTrigger,
    Content: HoverCardContent,
});
export { HoverCard, HoverCardRoot, HoverCardTrigger, HoverCardContent };
//# sourceMappingURL=hover-card.js.map