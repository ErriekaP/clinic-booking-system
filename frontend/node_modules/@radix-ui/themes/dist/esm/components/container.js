import * as React from 'react';
import classNames from 'classnames';
import { containerPropDefs } from './container.props';
import { extractMarginProps, withMarginProps, extractLayoutProps, withLayoutProps, withBreakpoints, } from '../helpers';
const Container = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = extractMarginProps(props);
    const { rest: layoutRest, ...layoutProps } = extractLayoutProps(marginRest);
    const { children, className, size = containerPropDefs.size.default, display = containerPropDefs.display.default, ...containerProps } = layoutRest;
    return (React.createElement("div", { ...containerProps, ref: forwardedRef, className: classNames('rt-Container', className, withBreakpoints(size, 'rt-r-size'), withBreakpoints(display, 'rt-r-display'), withLayoutProps(layoutProps), withMarginProps(marginProps)) },
        React.createElement("div", { className: "rt-ContainerInner" }, children)));
});
Container.displayName = 'Container';
export { Container };
//# sourceMappingURL=container.js.map