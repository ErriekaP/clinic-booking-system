import * as React from 'react';
import { Text } from './text';
import { calloutRootPropDefs } from './callout.props';
import type { PropsWithoutRefOrColor, MarginProps, GetPropDefTypes, ExtractPropsForTag } from '../helpers';
type CalloutRootOwnProps = GetPropDefTypes<typeof calloutRootPropDefs>;
type CalloutContextValue = CalloutRootOwnProps;
interface CalloutRootProps extends PropsWithoutRefOrColor<'div'>, MarginProps, CalloutContextValue {
}
declare const CalloutRoot: React.ForwardRefExoticComponent<Omit<CalloutRootProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
interface CalloutIconProps extends PropsWithoutRefOrColor<'div'> {
}
declare const CalloutIcon: React.ForwardRefExoticComponent<Omit<CalloutIconProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
type CalloutTextProps = ExtractPropsForTag<typeof Text, 'p'>;
declare const CalloutText: React.ForwardRefExoticComponent<CalloutTextProps & React.RefAttributes<HTMLParagraphElement>>;
declare const Callout: {
    Root: React.ForwardRefExoticComponent<Omit<CalloutRootProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
    Icon: React.ForwardRefExoticComponent<Omit<CalloutIconProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
    Text: React.ForwardRefExoticComponent<CalloutTextProps & React.RefAttributes<HTMLParagraphElement>>;
};
export { Callout, CalloutRoot, CalloutIcon, CalloutText };
export type { CalloutRootProps, CalloutIconProps, CalloutTextProps };
