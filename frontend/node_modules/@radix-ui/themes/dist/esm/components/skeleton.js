import * as React from 'react';
import classNames from 'classnames';
import { Slot } from '@radix-ui/react-slot';
import { skeletonPropDefs } from './skeleton.props';
import { extractMarginProps, withMarginProps } from '../helpers';
const Skeleton = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = extractMarginProps(props);
    const { className, children, loading = skeletonPropDefs.loading.default, ...skeletonProps } = marginRest;
    if (!loading)
        return React.createElement(React.Fragment, null, children);
    const Tag = React.isValidElement(children) ? Slot : 'span';
    return (React.createElement(Tag, { ref: forwardedRef, "aria-hidden": true, className: classNames('rt-Skeleton', className, withMarginProps(marginProps)), "data-inline-skeleton": React.isValidElement(children) ? undefined : true, tabIndex: -1, ...{ inert: true ? '' : undefined }, ...skeletonProps }, children));
});
Skeleton.displayName = 'Skeleton';
export { Skeleton };
//# sourceMappingURL=skeleton.js.map