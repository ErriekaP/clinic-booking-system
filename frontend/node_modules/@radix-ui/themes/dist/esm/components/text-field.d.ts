import * as React from 'react';
import { textFieldPropDefs, textFieldSlotPropDefs } from './text-field.props';
import type { PropsWithoutRefOrColor, MarginProps, PaddingProps, GetPropDefTypes } from '../helpers';
type TextFieldContextValue = GetPropDefTypes<typeof textFieldPropDefs>;
interface TextFieldRootProps extends PropsWithoutRefOrColor<'div'>, MarginProps, TextFieldContextValue {
}
declare const TextFieldRoot: React.ForwardRefExoticComponent<Omit<TextFieldRootProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
type TextFieldSlotOwnProps = GetPropDefTypes<typeof textFieldSlotPropDefs>;
interface TextFieldSlotProps extends PropsWithoutRefOrColor<'div'>, PaddingProps, TextFieldSlotOwnProps {
}
declare const TextFieldSlot: React.ForwardRefExoticComponent<Omit<TextFieldSlotProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
type TextFieldInputOwnProps = GetPropDefTypes<typeof textFieldPropDefs>;
interface TextFieldInputProps extends Omit<PropsWithoutRefOrColor<'input'>, 'size'>, MarginProps, TextFieldInputOwnProps {
}
declare const TextFieldInput: React.ForwardRefExoticComponent<Omit<TextFieldInputProps, "ref"> & React.RefAttributes<HTMLInputElement>>;
declare const TextField: {
    Root: React.ForwardRefExoticComponent<Omit<TextFieldRootProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
    Slot: React.ForwardRefExoticComponent<Omit<TextFieldSlotProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
    Input: React.ForwardRefExoticComponent<Omit<TextFieldInputProps, "ref"> & React.RefAttributes<HTMLInputElement>>;
};
export { TextField, TextFieldRoot, TextFieldSlot, TextFieldInput };
export type { TextFieldRootProps, TextFieldSlotProps, TextFieldInputProps };
