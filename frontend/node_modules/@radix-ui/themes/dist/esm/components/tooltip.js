'use client';
import * as React from 'react';
import classNames from 'classnames';
import * as TooltipPrimitive from '@radix-ui/react-tooltip';
import { Text } from './text';
import { Theme } from '../theme';
const Tooltip = React.forwardRef((props, forwardedRef) => {
    const { children, className, open, defaultOpen, onOpenChange, delayDuration, disableHoverableContent, content, container, forceMount, ...tooltipContentProps } = props;
    const rootProps = { open, defaultOpen, onOpenChange, delayDuration, disableHoverableContent };
    return (React.createElement(TooltipPrimitive.Root, { ...rootProps },
        React.createElement(TooltipPrimitive.Trigger, { asChild: true }, children),
        React.createElement(TooltipPrimitive.Portal, { container: container, forceMount: forceMount },
            React.createElement(Theme, { asChild: true },
                React.createElement(TooltipPrimitive.Content, { sideOffset: 4, collisionPadding: 10, ...tooltipContentProps, ref: forwardedRef, className: classNames('rt-TooltipContent', className) },
                    React.createElement(Text, { as: "p", className: "rt-TooltipText", size: "1" }, content),
                    React.createElement(TooltipPrimitive.Arrow, { className: "rt-TooltipArrow" }))))));
});
Tooltip.displayName = 'Tooltip';
export { Tooltip };
//# sourceMappingURL=tooltip.js.map