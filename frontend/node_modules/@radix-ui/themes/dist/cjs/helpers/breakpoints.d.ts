type Breakpoints = 'initial' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
type Responsive<T> = T | Partial<Record<Breakpoints, T>>;
/**
 * A helper to generate CSS classes that include breakpoints.
 *
 * Examples:
 * ```
 * const marginTop = '1'
 * withBreakpoints(marginTop, 'mt') // returns 'mt-1'
 *
 * const padding = { initial: '1', xs: '2', md: '3' }
 * withBreakpoints(padding, 'p') // returns 'p-1 xs:p-1 md:p-3'
 *
 * const justifyContent = { initial: 'start', md: 'space-between' }
 * withBreakpoints(justifyContent, 'jc', { 'space-between': 'sb' }) // returns 'jc-start md:jc-sb'
 * ```
 */
declare function withBreakpoints(value: Responsive<string | boolean> | undefined, // Value to check
classPrefix?: string, // CSS class prefix, e.g. "px" in "px-1" class
valueMap?: Record<string, string>): string;
declare function isBreakpointsObject<V extends string>(obj: Responsive<V | Omit<string, V>> | undefined): obj is Record<Breakpoints, string>;
export { withBreakpoints, isBreakpointsObject };
export type { Breakpoints, Responsive };
