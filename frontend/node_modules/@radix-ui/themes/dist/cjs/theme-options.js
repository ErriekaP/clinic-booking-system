"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.themeGrayColorsGrouped = exports.themeAccentColorsOrdered = exports.themeAccentColorsGrouped = exports.getMatchingGrayColor = exports.themePropDefs = void 0;
const radix_colors_1 = require("./helpers/radix-colors");
const appearances = ['inherit', 'light', 'dark'];
const accentColors = [...radix_colors_1.radixColorScales, 'gray'];
const grayColors = [...radix_colors_1.radixGrayScales, 'auto'];
const panelBackgrounds = ['solid', 'translucent'];
const radii = ['none', 'small', 'medium', 'large', 'full'];
const scalings = ['90%', '95%', '100%', '105%', '110%'];
const themePropDefs = {
    hasBackground: { type: 'boolean', default: true },
    appearance: { type: 'enum', values: appearances, default: 'inherit' },
    accentColor: { type: 'enum', values: accentColors, default: 'indigo' },
    grayColor: { type: 'enum', values: grayColors, default: 'auto' },
    panelBackground: { type: 'enum', values: panelBackgrounds, default: 'translucent' },
    radius: { type: 'enum', values: radii, default: 'medium' },
    scaling: { type: 'enum', values: scalings, default: '100%' },
};
exports.themePropDefs = themePropDefs;
const themeAccentColorsGrouped = [
    { label: 'Regulars', values: [...radix_colors_1.radixColorScalesRegular] },
    { label: 'Brights', values: [...radix_colors_1.radixColorScalesBright] },
    { label: 'Metals', values: [...radix_colors_1.radixColorScalesMetal] },
    { label: 'Gray', values: ['gray'] },
];
exports.themeAccentColorsGrouped = themeAccentColorsGrouped;
const themeAccentColorsOrdered = [
    'gray',
    'gold',
    'bronze',
    'brown',
    'yellow',
    'amber',
    'orange',
    'tomato',
    'red',
    'ruby',
    'crimson',
    'pink',
    'plum',
    'purple',
    'violet',
    'iris',
    'indigo',
    'blue',
    'cyan',
    'teal',
    'jade',
    'green',
    'grass',
    'lime',
    'mint',
    'sky',
];
exports.themeAccentColorsOrdered = themeAccentColorsOrdered;
const themeGrayColorsGrouped = [
    { label: 'Pure', values: [radix_colors_1.radixGrayScalePure] },
    { label: 'Desaturated', values: ['auto', ...radix_colors_1.radixGrayScalesDesaturated] },
];
exports.themeGrayColorsGrouped = themeGrayColorsGrouped;
function getMatchingGrayColor(accentColor) {
    if (accentColor === 'gray')
        return 'gray';
    return (0, radix_colors_1.radixGetMatchingGrayScale)(accentColor);
}
exports.getMatchingGrayColor = getMatchingGrayColor;
//# sourceMappingURL=theme-options.js.map