"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.RadioGroupItem = exports.RadioGroupRoot = exports.RadioGroup = void 0;
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const RadioGroupPrimitive = tslib_1.__importStar(require("@radix-ui/react-radio-group"));
const radio_group_props_1 = require("./radio-group.props");
const helpers_1 = require("../helpers");
const RadioGroupRoot = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = (0, helpers_1.extractMarginProps)(props);
    const { className, size = radio_group_props_1.radioGroupPropDefs.size.default, variant = radio_group_props_1.radioGroupPropDefs.variant.default, color = radio_group_props_1.radioGroupPropDefs.color.default, highContrast = radio_group_props_1.radioGroupPropDefs.highContrast.default, ...rootProps } = marginRest;
    return (React.createElement(RadioGroupPrimitive.Root, { "data-accent-color": color, ...rootProps, ref: forwardedRef, className: (0, classnames_1.default)('rt-RadioGroupRoot', className, (0, helpers_1.withBreakpoints)(size, 'rt-r-size'), `rt-variant-${variant}`, { 'rt-high-contrast': highContrast }, (0, helpers_1.withMarginProps)(marginProps)) }));
});
exports.RadioGroupRoot = RadioGroupRoot;
RadioGroupRoot.displayName = 'RadioGroupRoot';
const RadioGroupItem = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = (0, helpers_1.extractMarginProps)(props);
    const { className, style, ...itemProps } = marginRest;
    return (React.createElement("span", { className: (0, classnames_1.default)('rt-RadioGroupItem', className, (0, helpers_1.withMarginProps)(marginProps)), style: style },
        React.createElement(RadioGroupPrimitive.Item, { ...itemProps, ref: forwardedRef, className: (0, classnames_1.default)('rt-reset', 'rt-RadioGroupButton') },
            React.createElement(RadioGroupPrimitive.Indicator, { className: "rt-RadioGroupIndicator" }))));
});
exports.RadioGroupItem = RadioGroupItem;
RadioGroupItem.displayName = 'RadioGroupItem';
const RadioGroup = Object.assign({}, {
    Root: RadioGroupRoot,
    Item: RadioGroupItem,
});
exports.RadioGroup = RadioGroup;
//# sourceMappingURL=radio-group.js.map