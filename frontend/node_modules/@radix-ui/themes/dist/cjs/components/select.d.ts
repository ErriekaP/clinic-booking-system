import * as React from 'react';
import * as SelectPrimitive from '@radix-ui/react-select';
import { selectRootPropDefs, selectTriggerPropDefs, selectContentPropDefs } from './select.props';
import type { PropsWithoutRefOrColor, MarginProps, GetPropDefTypes } from '../helpers';
type SelectRootOwnProps = GetPropDefTypes<typeof selectRootPropDefs>;
type SelectContextValue = SelectRootOwnProps;
interface SelectRootProps extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Root>, SelectContextValue {
}
declare const SelectRoot: React.FC<SelectRootProps>;
type SelectTriggerOwnProps = GetPropDefTypes<typeof selectTriggerPropDefs>;
interface SelectTriggerProps extends Omit<PropsWithoutRefOrColor<typeof SelectPrimitive.Trigger>, 'asChild'>, MarginProps, SelectTriggerOwnProps {
    placeholder?: string;
}
declare const SelectTrigger: React.ForwardRefExoticComponent<Omit<SelectTriggerProps, "ref"> & React.RefAttributes<HTMLButtonElement>>;
type SelectContentOwnProps = GetPropDefTypes<typeof selectContentPropDefs>;
interface SelectContentProps extends PropsWithoutRefOrColor<typeof SelectPrimitive.Content>, SelectContentOwnProps {
    container?: React.ComponentProps<typeof SelectPrimitive.Portal>['container'];
}
declare const SelectContent: React.ForwardRefExoticComponent<Omit<SelectContentProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
interface SelectItemProps extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item> {
}
declare const SelectItem: React.ForwardRefExoticComponent<SelectItemProps & React.RefAttributes<HTMLDivElement>>;
interface SelectGroupProps extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Group> {
}
declare const SelectGroup: React.ForwardRefExoticComponent<SelectGroupProps & React.RefAttributes<HTMLDivElement>>;
interface SelectLabelProps extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label> {
}
declare const SelectLabel: React.ForwardRefExoticComponent<SelectLabelProps & React.RefAttributes<HTMLDivElement>>;
interface SelectSeparatorProps extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator> {
}
declare const SelectSeparator: React.ForwardRefExoticComponent<SelectSeparatorProps & React.RefAttributes<HTMLDivElement>>;
declare const Select: {
    Root: React.FC<SelectRootProps>;
    Trigger: React.ForwardRefExoticComponent<Omit<SelectTriggerProps, "ref"> & React.RefAttributes<HTMLButtonElement>>;
    Content: React.ForwardRefExoticComponent<Omit<SelectContentProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
    Item: React.ForwardRefExoticComponent<SelectItemProps & React.RefAttributes<HTMLDivElement>>;
    Group: React.ForwardRefExoticComponent<SelectGroupProps & React.RefAttributes<HTMLDivElement>>;
    Label: React.ForwardRefExoticComponent<SelectLabelProps & React.RefAttributes<HTMLDivElement>>;
    Separator: React.ForwardRefExoticComponent<SelectSeparatorProps & React.RefAttributes<HTMLDivElement>>;
};
export { Select, SelectRoot, SelectTrigger, SelectContent, SelectItem, SelectGroup, SelectLabel, SelectSeparator, };
export type { SelectRootProps, SelectTriggerProps, SelectContentProps, SelectItemProps, SelectGroupProps, SelectLabelProps, SelectSeparatorProps, };
