"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.Avatar = void 0;
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const AvatarPrimitive = tslib_1.__importStar(require("@radix-ui/react-avatar"));
const avatar_props_1 = require("./avatar.props");
const helpers_1 = require("../helpers");
const Avatar = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = (0, helpers_1.extractMarginProps)(props);
    const { className, style, size = avatar_props_1.avatarPropDefs.size.default, variant = avatar_props_1.avatarPropDefs.variant.default, color = avatar_props_1.avatarPropDefs.color.default, highContrast = avatar_props_1.avatarPropDefs.highContrast.default, radius = avatar_props_1.avatarPropDefs.radius.default, fallback, ...imageProps } = marginRest;
    const [status, setStatus] = React.useState('idle');
    return (React.createElement(AvatarPrimitive.Root, { "data-accent-color": color, "data-radius": radius, className: (0, classnames_1.default)('rt-AvatarRoot', className, (0, helpers_1.withBreakpoints)(size, 'rt-r-size'), `rt-variant-${variant}`, { 'rt-high-contrast': highContrast }, (0, helpers_1.withMarginProps)(marginProps)), style: style },
        status === 'idle' || status === 'loading' ? React.createElement("span", { className: "rt-AvatarFallback" }) : null,
        status === 'error' ? (React.createElement(AvatarPrimitive.Fallback, { className: (0, classnames_1.default)('rt-AvatarFallback', {
                'rt-one-letter': typeof fallback === 'string' && fallback.length === 1,
                'rt-two-letters': typeof fallback === 'string' && fallback.length === 2,
            }), delayMs: 0 }, fallback)) : null,
        React.createElement(AvatarPrimitive.Image, { ref: forwardedRef, className: "rt-AvatarImage", ...imageProps, onLoadingStatusChange: (status) => {
                var _a;
                (_a = imageProps.onLoadingStatusChange) === null || _a === void 0 ? void 0 : _a.call(imageProps, status);
                setStatus(status);
            } })));
});
exports.Avatar = Avatar;
Avatar.displayName = 'Avatar';
//# sourceMappingURL=avatar.js.map