"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabsContent = exports.TabsTrigger = exports.TabsList = exports.TabsRoot = exports.Tabs = void 0;
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const TabsPrimitive = tslib_1.__importStar(require("@radix-ui/react-tabs"));
const tabs_props_1 = require("./tabs.props");
const helpers_1 = require("../helpers");
const TabsRoot = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = (0, helpers_1.extractMarginProps)(props);
    const { className, ...rootProps } = marginRest;
    return (React.createElement(TabsPrimitive.Root, { ...rootProps, ref: forwardedRef, className: (0, classnames_1.default)('rt-TabsRoot', className, (0, helpers_1.withMarginProps)(marginProps)) }));
});
exports.TabsRoot = TabsRoot;
TabsRoot.displayName = 'TabsRoot';
const TabsList = React.forwardRef((props, forwardedRef) => {
    const { className, size = tabs_props_1.tabsListPropDefs.size.default, ...listProps } = props;
    return (React.createElement(TabsPrimitive.List, { ...listProps, ref: forwardedRef, className: (0, classnames_1.default)('rt-TabsList', className, (0, helpers_1.withBreakpoints)(size, 'rt-r-size')) }));
});
exports.TabsList = TabsList;
TabsList.displayName = 'TabsList';
const TabsTrigger = React.forwardRef((props, forwardedRef) => {
    const { className, children, ...triggerProps } = props;
    return (React.createElement(TabsPrimitive.Trigger, { ...triggerProps, ref: forwardedRef, className: (0, classnames_1.default)('rt-reset', 'rt-TabsTrigger', className) },
        React.createElement("span", { className: "rt-TabsTriggerInner" }, children),
        React.createElement("span", { className: "rt-TabsTriggerInnerHidden" }, children)));
});
exports.TabsTrigger = TabsTrigger;
TabsTrigger.displayName = 'TabsTrigger';
const TabsContent = React.forwardRef((props, forwardedRef) => (React.createElement(TabsPrimitive.Content, { ...props, ref: forwardedRef, className: (0, classnames_1.default)('rt-TabsContent', props.className) })));
exports.TabsContent = TabsContent;
TabsContent.displayName = 'TabsContent';
const Tabs = Object.assign({}, {
    Root: TabsRoot,
    List: TabsList,
    Trigger: TabsTrigger,
    Content: TabsContent,
});
exports.Tabs = Tabs;
//# sourceMappingURL=tabs.js.map