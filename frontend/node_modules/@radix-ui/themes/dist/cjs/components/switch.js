"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.Switch = void 0;
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const SwitchPrimitive = tslib_1.__importStar(require("@radix-ui/react-switch"));
const switch_props_1 = require("./switch.props");
const helpers_1 = require("../helpers");
const Switch = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = (0, helpers_1.extractMarginProps)(props);
    const { className, style, size = switch_props_1.switchPropDefs.size.default, variant = switch_props_1.switchPropDefs.variant.default, color = switch_props_1.switchPropDefs.color.default, highContrast = switch_props_1.switchPropDefs.highContrast.default, radius = switch_props_1.switchPropDefs.radius.default, ...switchProps } = marginRest;
    return (React.createElement("span", { "data-radius": radius, className: (0, classnames_1.default)('rt-SwitchRoot', className, (0, helpers_1.withBreakpoints)(size, 'rt-r-size'), `rt-variant-${variant}`, { 'rt-high-contrast': highContrast }, (0, helpers_1.withMarginProps)(marginProps)), style: style },
        React.createElement(SwitchPrimitive.Root, { "data-accent-color": color, ...switchProps, ref: forwardedRef, className: (0, classnames_1.default)('rt-reset', 'rt-SwitchButton', {
                'rt-high-contrast': highContrast,
            }) },
            React.createElement(SwitchPrimitive.Thumb, { className: (0, classnames_1.default)('rt-SwitchThumb', { 'rt-high-contrast': highContrast }) }))));
});
exports.Switch = Switch;
Switch.displayName = 'Switch';
//# sourceMappingURL=switch.js.map