"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.PopoverClose = exports.PopoverTrigger = exports.PopoverContent = exports.PopoverRoot = exports.Popover = void 0;
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const PopoverPrimitive = tslib_1.__importStar(require("@radix-ui/react-popover"));
const popover_props_1 = require("./popover.props");
const helpers_1 = require("../helpers");
const theme_1 = require("../theme");
const PopoverRoot = (props) => (React.createElement(PopoverPrimitive.Root, { ...props }));
exports.PopoverRoot = PopoverRoot;
PopoverRoot.displayName = 'PopoverRoot';
const PopoverTrigger = React.forwardRef((props, forwardedRef) => React.createElement(PopoverPrimitive.Trigger, { ...props, ref: forwardedRef, asChild: true }));
exports.PopoverTrigger = PopoverTrigger;
PopoverTrigger.displayName = 'PopoverTrigger';
const PopoverContent = React.forwardRef((props, forwardedRef) => {
    const { className, forceMount, container, size = popover_props_1.popoverContentPropDefs.size.default, ...contentProps } = props;
    return (React.createElement(PopoverPrimitive.Portal, { container: container, forceMount: forceMount },
        React.createElement(theme_1.Theme, { asChild: true },
            React.createElement(PopoverPrimitive.Content, { align: "start", sideOffset: 8, collisionPadding: 10, ...contentProps, ref: forwardedRef, className: (0, classnames_1.default)('rt-PopperContent', 'rt-PopoverContent', className, (0, helpers_1.withBreakpoints)(size, 'rt-r-size')) }))));
});
exports.PopoverContent = PopoverContent;
PopoverContent.displayName = 'PopoverContent';
const PopoverClose = React.forwardRef((props, forwardedRef) => React.createElement(PopoverPrimitive.Close, { ...props, ref: forwardedRef, asChild: true }));
exports.PopoverClose = PopoverClose;
PopoverClose.displayName = 'PopoverClose';
const Popover = Object.assign({}, {
    Root: PopoverRoot,
    Content: PopoverContent,
    Trigger: PopoverTrigger,
    Close: PopoverClose,
});
exports.Popover = Popover;
//# sourceMappingURL=popover.js.map