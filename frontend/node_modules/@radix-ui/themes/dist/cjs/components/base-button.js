"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseButton = void 0;
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const react_slot_1 = require("@radix-ui/react-slot");
const base_button_props_1 = require("./base-button.props");
const helpers_1 = require("../helpers");
const BaseButton = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = (0, helpers_1.extractMarginProps)(props);
    const { className, asChild = false, size = base_button_props_1.baseButtonPropDefs.size.default, variant = base_button_props_1.baseButtonPropDefs.variant.default, color = base_button_props_1.baseButtonPropDefs.color.default, highContrast = base_button_props_1.baseButtonPropDefs.highContrast.default, radius = base_button_props_1.baseButtonPropDefs.radius.default, ...baseButtonProps } = marginRest;
    const Comp = asChild ? react_slot_1.Slot : 'button';
    return (React.createElement(Comp
    // The `data-disabled` attributeÂ enables correct styles when doing `<Button asChild disabled>`
    , { "data-disabled": baseButtonProps.disabled || undefined, "data-accent-color": color, "data-radius": radius, ...baseButtonProps, ref: forwardedRef, className: (0, classnames_1.default)('rt-reset', 'rt-BaseButton', className, (0, helpers_1.withBreakpoints)(size, 'rt-r-size'), `rt-variant-${variant}`, { 'rt-high-contrast': highContrast }, (0, helpers_1.withMarginProps)(marginProps)) }));
});
exports.BaseButton = BaseButton;
BaseButton.displayName = 'BaseButton';
//# sourceMappingURL=base-button.js.map