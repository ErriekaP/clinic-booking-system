"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Card = void 0;
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const react_slot_1 = require("@radix-ui/react-slot");
const card_props_1 = require("./card.props");
const helpers_1 = require("../helpers");
const Card = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = (0, helpers_1.extractMarginProps)(props);
    const { asChild, children, className, size = card_props_1.cardPropDefs.size.default, variant = card_props_1.cardPropDefs.variant.default, ...cardProps } = marginRest;
    const Comp = asChild ? react_slot_1.Slot : 'div';
    function getChild() {
        const firstChild = React.Children.only(children);
        return React.cloneElement(firstChild, {
            children: React.createElement("div", { className: "rt-CardInner" }, firstChild.props.children),
        });
    }
    return (React.createElement(Comp, { ref: forwardedRef, ...cardProps, className: (0, classnames_1.default)('rt-reset', 'rt-Card', className, (0, helpers_1.withBreakpoints)(size, 'rt-r-size'), `rt-variant-${variant}`, (0, helpers_1.withMarginProps)(marginProps)) }, asChild ? getChild() : React.createElement("div", { className: "rt-CardInner" }, children)));
});
exports.Card = Card;
Card.displayName = 'Card';
//# sourceMappingURL=card.js.map