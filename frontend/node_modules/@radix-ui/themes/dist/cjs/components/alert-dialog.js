"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlertDialogCancel = exports.AlertDialogAction = exports.AlertDialogDescription = exports.AlertDialogTitle = exports.AlertDialogContent = exports.AlertDialogTrigger = exports.AlertDialogRoot = exports.AlertDialog = void 0;
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const AlertDialogPrimitive = tslib_1.__importStar(require("@radix-ui/react-alert-dialog"));
const alert_dialog_props_1 = require("./alert-dialog.props");
const helpers_1 = require("../helpers");
const heading_1 = require("./heading");
const text_1 = require("./text");
const theme_1 = require("../theme");
const AlertDialogRoot = (props) => (React.createElement(AlertDialogPrimitive.Root, { ...props }));
exports.AlertDialogRoot = AlertDialogRoot;
AlertDialogRoot.displayName = 'AlertDialogRoot';
const AlertDialogTrigger = React.forwardRef((props, forwardedRef) => React.createElement(AlertDialogPrimitive.Trigger, { ...props, ref: forwardedRef, asChild: true }));
exports.AlertDialogTrigger = AlertDialogTrigger;
AlertDialogTrigger.displayName = 'AlertDialogTrigger';
const AlertDialogContent = React.forwardRef((props, forwardedRef) => {
    const { className, forceMount, container, size = alert_dialog_props_1.alertDialogContentPropDefs.size.default, ...contentProps } = props;
    return (React.createElement(AlertDialogPrimitive.Portal, { container: container, forceMount: forceMount },
        React.createElement(theme_1.Theme, { asChild: true },
            React.createElement(AlertDialogPrimitive.Overlay, { className: "rt-DialogOverlay rt-AlertDialogOverlay" },
                React.createElement(AlertDialogPrimitive.Content, { ...contentProps, ref: forwardedRef, className: (0, classnames_1.default)('rt-DialogContent', 'rt-AlertDialogContent', className, (0, helpers_1.withBreakpoints)(size, 'rt-r-size')) })))));
});
exports.AlertDialogContent = AlertDialogContent;
AlertDialogContent.displayName = 'AlertDialogContent';
const AlertDialogTitle = React.forwardRef((props, forwardedRef) => (React.createElement(AlertDialogPrimitive.Title, { asChild: true },
    React.createElement(heading_1.Heading, { size: "5", mb: "3", trim: "start", ...props, ref: forwardedRef }))));
exports.AlertDialogTitle = AlertDialogTitle;
AlertDialogTitle.displayName = 'AlertDialogTitle';
const AlertDialogDescription = React.forwardRef((props, forwardedRef) => (React.createElement(AlertDialogPrimitive.Description, { asChild: true },
    React.createElement(text_1.Text, { as: "p", size: "3", ...props, ref: forwardedRef }))));
exports.AlertDialogDescription = AlertDialogDescription;
AlertDialogDescription.displayName = 'AlertDialogDescription';
const AlertDialogAction = React.forwardRef((props, forwardedRef) => React.createElement(AlertDialogPrimitive.Action, { ...props, ref: forwardedRef, asChild: true }));
exports.AlertDialogAction = AlertDialogAction;
AlertDialogAction.displayName = 'AlertDialogAction';
const AlertDialogCancel = React.forwardRef((props, forwardedRef) => React.createElement(AlertDialogPrimitive.Cancel, { ...props, ref: forwardedRef, asChild: true }));
exports.AlertDialogCancel = AlertDialogCancel;
AlertDialogCancel.displayName = 'AlertDialogCancel';
const AlertDialog = Object.assign({}, {
    Root: AlertDialogRoot,
    Trigger: AlertDialogTrigger,
    Content: AlertDialogContent,
    Title: AlertDialogTitle,
    Description: AlertDialogDescription,
    Action: AlertDialogAction,
    Cancel: AlertDialogCancel,
});
exports.AlertDialog = AlertDialog;
//# sourceMappingURL=alert-dialog.js.map