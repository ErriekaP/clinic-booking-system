{"mappings":"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","sources":["packages/react/hover-card/src/index.ts","packages/react/hover-card/src/HoverCard.tsx"],"sourcesContent":["export {\n  createHoverCardScope,\n  //\n  HoverCard,\n  HoverCardTrigger,\n  HoverCardPortal,\n  HoverCardContent,\n  HoverCardArrow,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Arrow,\n} from './HoverCard';\nexport type {\n  HoverCardProps,\n  HoverCardTriggerProps,\n  HoverCardPortalProps,\n  HoverCardContentProps,\n  HoverCardArrowProps,\n} from './HoverCard';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * HoverCard\n * -----------------------------------------------------------------------------------------------*/\n\nlet originalBodyUserSelect: string;\n\nconst HOVERCARD_NAME = 'HoverCard';\n\ntype ScopedProps<P> = P & { __scopeHoverCard?: Scope };\nconst [createHoverCardContext, createHoverCardScope] = createContextScope(HOVERCARD_NAME, [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype HoverCardContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpen(): void;\n  onClose(): void;\n  onDismiss(): void;\n  hasSelectionRef: React.MutableRefObject<boolean>;\n  isPointerDownOnContentRef: React.MutableRefObject<boolean>;\n};\n\nconst [HoverCardProvider, useHoverCardContext] =\n  createHoverCardContext<HoverCardContextValue>(HOVERCARD_NAME);\n\ninterface HoverCardProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  openDelay?: number;\n  closeDelay?: number;\n}\n\nconst HoverCard: React.FC<HoverCardProps> = (props: ScopedProps<HoverCardProps>) => {\n  const {\n    __scopeHoverCard,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    openDelay = 700,\n    closeDelay = 300,\n  } = props;\n  const popperScope = usePopperScope(__scopeHoverCard);\n  const openTimerRef = React.useRef(0);\n  const closeTimerRef = React.useRef(0);\n  const hasSelectionRef = React.useRef(false);\n  const isPointerDownOnContentRef = React.useRef(false);\n\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  const handleOpen = React.useCallback(() => {\n    clearTimeout(closeTimerRef.current);\n    openTimerRef.current = window.setTimeout(() => setOpen(true), openDelay);\n  }, [openDelay, setOpen]);\n\n  const handleClose = React.useCallback(() => {\n    clearTimeout(openTimerRef.current);\n    if (!hasSelectionRef.current && !isPointerDownOnContentRef.current) {\n      closeTimerRef.current = window.setTimeout(() => setOpen(false), closeDelay);\n    }\n  }, [closeDelay, setOpen]);\n\n  const handleDismiss = React.useCallback(() => setOpen(false), [setOpen]);\n\n  // cleanup any queued state updates on unmount\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(openTimerRef.current);\n      clearTimeout(closeTimerRef.current);\n    };\n  }, []);\n\n  return (\n    <HoverCardProvider\n      scope={__scopeHoverCard}\n      open={open}\n      onOpenChange={setOpen}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      onDismiss={handleDismiss}\n      hasSelectionRef={hasSelectionRef}\n      isPointerDownOnContentRef={isPointerDownOnContentRef}\n    >\n      <PopperPrimitive.Root {...popperScope}>{children}</PopperPrimitive.Root>\n    </HoverCardProvider>\n  );\n};\n\nHoverCard.displayName = HOVERCARD_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * HoverCardTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'HoverCardTrigger';\n\ntype HoverCardTriggerElement = React.ElementRef<typeof Primitive.a>;\ntype PrimitiveLinkProps = Radix.ComponentPropsWithoutRef<typeof Primitive.a>;\ninterface HoverCardTriggerProps extends PrimitiveLinkProps {}\n\nconst HoverCardTrigger = React.forwardRef<HoverCardTriggerElement, HoverCardTriggerProps>(\n  (props: ScopedProps<HoverCardTriggerProps>, forwardedRef) => {\n    const { __scopeHoverCard, ...triggerProps } = props;\n    const context = useHoverCardContext(TRIGGER_NAME, __scopeHoverCard);\n    const popperScope = usePopperScope(__scopeHoverCard);\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.a\n          data-state={context.open ? 'open' : 'closed'}\n          {...triggerProps}\n          ref={forwardedRef}\n          onPointerEnter={composeEventHandlers(props.onPointerEnter, excludeTouch(context.onOpen))}\n          onPointerLeave={composeEventHandlers(props.onPointerLeave, excludeTouch(context.onClose))}\n          onFocus={composeEventHandlers(props.onFocus, context.onOpen)}\n          onBlur={composeEventHandlers(props.onBlur, context.onClose)}\n          // prevent focus event on touch devices\n          onTouchStart={composeEventHandlers(props.onTouchStart, (event) => event.preventDefault())}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nHoverCardTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * HoverCardPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'HoverCardPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createHoverCardContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface HoverCardPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst HoverCardPortal: React.FC<HoverCardPortalProps> = (\n  props: ScopedProps<HoverCardPortalProps>\n) => {\n  const { __scopeHoverCard, forceMount, children, container } = props;\n  const context = useHoverCardContext(PORTAL_NAME, __scopeHoverCard);\n  return (\n    <PortalProvider scope={__scopeHoverCard} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nHoverCardPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * HoverCardContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'HoverCardContent';\n\ntype HoverCardContentElement = HoverCardContentImplElement;\ninterface HoverCardContentProps extends HoverCardContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst HoverCardContent = React.forwardRef<HoverCardContentElement, HoverCardContentProps>(\n  (props: ScopedProps<HoverCardContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeHoverCard);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useHoverCardContext(CONTENT_NAME, props.__scopeHoverCard);\n    return (\n      <Presence present={forceMount || context.open}>\n        <HoverCardContentImpl\n          data-state={context.open ? 'open' : 'closed'}\n          {...contentProps}\n          onPointerEnter={composeEventHandlers(props.onPointerEnter, excludeTouch(context.onOpen))}\n          onPointerLeave={composeEventHandlers(props.onPointerLeave, excludeTouch(context.onClose))}\n          ref={forwardedRef}\n        />\n      </Presence>\n    );\n  }\n);\n\nHoverCardContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype HoverCardContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface HoverCardContentImplProps extends Omit<PopperContentProps, 'onPlaced'> {\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `HoverCard`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n  /**\n   * Event handler called when the focus moves outside of the `HoverCard`.\n   * Can be prevented.\n   */\n  onFocusOutside?: DismissableLayerProps['onFocusOutside'];\n  /**\n   * Event handler called when an interaction happens outside the `HoverCard`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: DismissableLayerProps['onInteractOutside'];\n}\n\nconst HoverCardContentImpl = React.forwardRef<\n  HoverCardContentImplElement,\n  HoverCardContentImplProps\n>((props: ScopedProps<HoverCardContentImplProps>, forwardedRef) => {\n  const {\n    __scopeHoverCard,\n    onEscapeKeyDown,\n    onPointerDownOutside,\n    onFocusOutside,\n    onInteractOutside,\n    ...contentProps\n  } = props;\n  const context = useHoverCardContext(CONTENT_NAME, __scopeHoverCard);\n  const popperScope = usePopperScope(__scopeHoverCard);\n  const ref = React.useRef<HoverCardContentImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const [containSelection, setContainSelection] = React.useState(false);\n\n  React.useEffect(() => {\n    if (containSelection) {\n      const body = document.body;\n\n      // Safari requires prefix\n      originalBodyUserSelect = body.style.userSelect || body.style.webkitUserSelect;\n\n      body.style.userSelect = 'none';\n      body.style.webkitUserSelect = 'none';\n      return () => {\n        body.style.userSelect = originalBodyUserSelect;\n        body.style.webkitUserSelect = originalBodyUserSelect;\n      };\n    }\n  }, [containSelection]);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      const handlePointerUp = () => {\n        setContainSelection(false);\n        context.isPointerDownOnContentRef.current = false;\n\n        // Delay a frame to ensure we always access the latest selection\n        setTimeout(() => {\n          const hasSelection = document.getSelection()?.toString() !== '';\n          if (hasSelection) context.hasSelectionRef.current = true;\n        });\n      };\n\n      document.addEventListener('pointerup', handlePointerUp);\n      return () => {\n        document.removeEventListener('pointerup', handlePointerUp);\n        context.hasSelectionRef.current = false;\n        context.isPointerDownOnContentRef.current = false;\n      };\n    }\n  }, [context.isPointerDownOnContentRef, context.hasSelectionRef]);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      const tabbables = getTabbableNodes(ref.current);\n      tabbables.forEach((tabbable) => tabbable.setAttribute('tabindex', '-1'));\n    }\n  });\n\n  return (\n    <DismissableLayer\n      asChild\n      disableOutsidePointerEvents={false}\n      onInteractOutside={onInteractOutside}\n      onEscapeKeyDown={onEscapeKeyDown}\n      onPointerDownOutside={onPointerDownOutside}\n      onFocusOutside={composeEventHandlers(onFocusOutside, (event) => {\n        event.preventDefault();\n      })}\n      onDismiss={context.onDismiss}\n    >\n      <PopperPrimitive.Content\n        {...popperScope}\n        {...contentProps}\n        onPointerDown={composeEventHandlers(contentProps.onPointerDown, (event) => {\n          // Contain selection to current layer\n          if (event.currentTarget.contains(event.target as HTMLElement)) {\n            setContainSelection(true);\n          }\n          context.hasSelectionRef.current = false;\n          context.isPointerDownOnContentRef.current = true;\n        })}\n        ref={composedRefs}\n        style={{\n          ...contentProps.style,\n          userSelect: containSelection ? 'text' : undefined,\n          // Safari requires prefix\n          WebkitUserSelect: containSelection ? 'text' : undefined,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-hover-card-content-transform-origin': 'var(--radix-popper-transform-origin)',\n            '--radix-hover-card-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-hover-card-content-available-height': 'var(--radix-popper-available-height)',\n            '--radix-hover-card-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-hover-card-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    </DismissableLayer>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * HoverCardArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'HoverCardArrow';\n\ntype HoverCardArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface HoverCardArrowProps extends PopperArrowProps {}\n\nconst HoverCardArrow = React.forwardRef<HoverCardArrowElement, HoverCardArrowProps>(\n  (props: ScopedProps<HoverCardArrowProps>, forwardedRef) => {\n    const { __scopeHoverCard, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeHoverCard);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nHoverCardArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction excludeTouch<E>(eventHandler: () => void) {\n  return (event: React.PointerEvent<E>) =>\n    event.pointerType === 'touch' ? undefined : eventHandler();\n}\n\n/**\n * Returns a list of nodes that can be in the tab sequence.\n * @see: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n */\nfunction getTabbableNodes(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  return nodes;\n}\n\nconst Root = HoverCard;\nconst Trigger = HoverCardTrigger;\nconst Portal = HoverCardPortal;\nconst Content = HoverCardContent;\nconst Arrow = HoverCardArrow;\n\nexport {\n  createHoverCardScope,\n  //\n  HoverCard,\n  HoverCardTrigger,\n  HoverCardPortal,\n  HoverCardContent,\n  HoverCardArrow,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Arrow,\n};\nexport type {\n  HoverCardProps,\n  HoverCardTriggerProps,\n  HoverCardPortalProps,\n  HoverCardContentProps,\n  HoverCardArrowProps,\n};\n"],"names":["createHoverCardScope","HoverCard","HoverCardTrigger","HoverCardPortal","HoverCardContent","HoverCardArrow","Root","Trigger","Portal","Content","Arrow","React","composeEventHandlers","createContextScope","useControllableState","useComposedRefs","PopperPrimitive","createPopperScope","PortalPrimitive","Presence","Primitive","DismissableLayer","originalBodyUserSelect","HOVERCARD_NAME","createHoverCardContext","usePopperScope","HoverCardProvider","useHoverCardContext","props","__scopeHoverCard","children","open","openProp","defaultOpen","onOpenChange","openDelay","closeDelay","popperScope","openTimerRef","useRef","closeTimerRef","hasSelectionRef","isPointerDownOnContentRef","setOpen","prop","defaultProp","onChange","handleOpen","useCallback","clearTimeout","current","window","setTimeout","handleClose","handleDismiss","useEffect","TRIGGER_NAME","forwardRef","forwardedRef","triggerProps","context","onPointerEnter","excludeTouch","onOpen","onPointerLeave","onClose","onFocus","onBlur","onTouchStart","event","preventDefault","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","undefined","container","CONTENT_NAME","portalContext","contentProps","HoverCardContentImpl","onEscapeKeyDown","onPointerDownOutside","onFocusOutside","onInteractOutside","ref","composedRefs","containSelection","setContainSelection","useState","body","document","style","userSelect","webkitUserSelect","handlePointerUp","hasSelection","getSelection","toString","addEventListener","removeEventListener","tabbables","getTabbableNodes","forEach","tabbable","setAttribute","onDismiss","onPointerDown","currentTarget","contains","target","WebkitUserSelect","ARROW_NAME","arrowProps","eventHandler","pointerType","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","node","tabIndex","FILTER_ACCEPT","FILTER_SKIP","nextNode","push","currentNode"],"version":3,"file":"index.js.map"}